{"version":3,"sources":["components/Player/PlayerChanger.module.scss","components/PageSection/PageSection.js","components/Player/Player.js","components/Player/PlayerChanger.js","serviceWorker.js","index.js","App.js","components/PageSection/PageSection.module.css"],"names":["module","exports","Changer","plyr","Input","Submit","Error","PageSection","props","react_default","a","createElement","className","classes","Content","Title","title","children","BLANK_VIDEO","Player","state","videoElement","React","createRef","currentPlayer","this","Plyr","current","controls","settings","update","prevProps","url","stop","source","getSourceFor","play","destroy","ref","src","type","Component","sources","size","PlayerChanger","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","preventDefault","Player_Player","onSubmit","placeholder","autoFocus","onChange","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","PlayerChanger_PlayerChanger","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bdbdd9eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Changer\":\"PlayerChanger_Changer__99pIG\",\"plyr\":\"PlayerChanger_plyr__27Ol_\",\"Input\":\"PlayerChanger_Input__2kb1P\",\"Submit\":\"PlayerChanger_Submit__2ZsSw\",\"Error\":\"PlayerChanger_Error__3DQGH\"};","import React from \"react\";\nimport classes from \"./PageSection.module.css\";\n\nexport default (props) => (\n\t<main className={classes.PageSection}>\n\t\t<section className={classes.Content}>\n\t\t\t<header className={classes.Title}>{props.title || \"Title\"}</header>\n\t\t\t{props.children}\n\t\t</section>\n\t</main>\n);","import React from \"react\";\nimport \"plyr/dist/plyr.css\";\nimport Plyr from \"plyr\";\n\nconst BLANK_VIDEO = \"https://cdn.plyr.io/static/blank.mp4\";\n\nexport default class Player extends React.Component {\n    state = {\n    \tvideoElement: React.createRef(),\n    }\n    currentPlayer = null;\n    componentDidMount() {\n    \tthis.currentPlayer = new Plyr(this.state.videoElement.current, {\n    \t\ttitle: \"CDN Player\",\n    \t\tcontrols: [\"play-large\", \"play\", \"progress\", \"current-time\", \"mute\", \"volume\", \"captions\", \"settings\", \"pip\", \"airplay\", \"fullscreen\"],\n    \t\tsettings: [\"captions\", \"quality\", \"speed\", \"loop\"],\n    \t});\n    \tthis.update();\n    }\n    componentDidUpdate(prevProps) {\n    \tif (this.props.url !== prevProps.url) {\n    \t\tthis.update();\n    \t}\n    }\n    update() {\n    \tthis.currentPlayer.stop();\n    \tthis.currentPlayer.source = getSourceFor(BLANK_VIDEO);\n    \tthis.currentPlayer.source = getSourceFor(this.props.url);\n    \tthis.currentPlayer.play();\n    }\n    componentWillUnmount() {\n    \tthis.currentPlayer.destroy();\n    }\n    render() {\n    \treturn <video ref={this.state.videoElement}>\n    \t\t<source src={BLANK_VIDEO} type=\"video/mp4\" />\n    \t</video>;\n    }\n}\n\n\nfunction getSourceFor(url) {\n\treturn {\n\t\ttype: \"video\",\n\t\tsources: [\n\t\t\t{\n\t\t\t\tsrc: url,\n\t\t\t\ttype: \"video/mp4\",\n\t\t\t\tsize: 720,\n\t\t\t}\n\t\t]\n\t};\n} ","\nimport React from \"react\";\nimport PageSection from \"../PageSection/PageSection\";\nimport Player from \"./Player\";\nimport classes from \"./PlayerChanger.module.scss\";\n\nexport default class PlayerChanger extends React.Component {\n    state = {\n    \terror: null,\n    \tvalue: \"\",\n    \turl: null\n    }\n    constructor() {\n    \tsuper();\n\n    \tthis.handleChange = this.handleChange.bind(this);\n    \tthis.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n    \tthis.setState({ value: event.target.value, error: null });\n    }\n    handleSubmit(event) {\n    \tif(this.state.value === \"\"){\n    \t\tthis.setState({ error: \"URL is empty\" });\n    \t}else{\n    \t\tthis.setState({ url: this.state.value });\n    \t}\n        \n    \tevent.preventDefault();\n    }\n    render() {\n    \treturn <PageSection title=\"CDN online player\">\n    \t\t{this.state.url && <Player url={this.state.url} />}\n\n    \t\t<form className={classes.Changer} onSubmit={this.handleSubmit}>\n    \t\t\t<input \n    \t\t\t\ttype=\"url\" \n    \t\t\t\tplaceholder=\"Put URL of video, which you want to watch\" \n    \t\t\t\tautoFocus \n    \t\t\t\tclassName={classes.Input} \n    \t\t\t\tvalue={this.state.value} \n    \t\t\t\tonChange={this.handleChange}\n    \t\t\t/>\n    \t\t\t<input type=\"submit\" value=\"Watch!\" className={classes.Submit} />\n    \t\t\t<span className={classes.Error}>{this.state.error}</span>\n    \t\t</form>\n\n    \t</PageSection>;\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport PlayerChanger from \"./components/Player/PlayerChanger\";\n\nexport default () => (\n\t<PlayerChanger />\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageSection\":\"PageSection_PageSection__XedTB\",\"Content\":\"PageSection_Content__gf9zL\",\"Title\":\"PageSection_Title__2BPQN\"};"],"sourceRoot":""}